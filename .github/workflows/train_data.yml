name: AQI Training Pipeline (PKT)
on:
  schedule:
    - cron: "0 19 * * *"  # 00:00 PKT (7 PM UTC)
  workflow_dispatch:

jobs:
  pipeline:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      TZ: Asia/Karachi
      PYTHONPATH: ${{ github.workspace }}/src
      LOG_DIR: ${{ github.workspace }}/logs

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Create directories
        run: |
          mkdir -p src/models
          mkdir -p $LOG_DIR

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install python-dotenv
          
      - name: Process data
        run: |
          python -m src.features.process --lookback_days 90
          echo "Data processed at $(date +'%Y-%m-%d %H:%M:%S %Z')" > $LOG_DIR/timing.log
        env:
          HOPSWORKS_API_KEY: ${{ secrets.HOPSWORKS_API_KEY }}

      - name: Train model
        run: |
          python -m src.models.train
          echo "Training completed at $(date +'%Y-%m-%d %H:%M:%S %Z')" >> $LOG_DIR/timing.log
        env:
          HOPSWORKS_API_KEY: ${{ secrets.HOPSWORKS_API_KEY }}

      - name: Archive logs
        uses: actions/upload-artifact@v3
        with:
          name: training-artifacts
          path: |
            ${{ github.workspace }}/logs/
            ${{ github.workspace }}/src/models/*.log
          retention-days: 7

      - name: Notify on failure
        if: failure()
        uses: actions/slack@v1
        with:
          payload: |
            {
              "text": "ðŸš¨ AQI Training Pipeline Failed",
              "attachments": [{
                "color": "#ff0000",
                "actions": [{
                  "type": "button",
                  "text": "View Run",
                  "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                }]
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
